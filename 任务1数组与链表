链表如下
class Node:
'''节点类'''
    def __init__(self, value):
        self.val = value
        self.next = None

        
        
class LinkList:
    def __init__(self):
        self.head = None
        self._lens = 0
        
    def size(self):
        return self._lens
        
    def append(self, val):
        node = Node(val)
        if not self.head:
            self.head = node
            self._lens += 1
            return
        cur = self.head
        while cur.next:
            cur = cur.next
        self._lens += 1
        cur.next = node
        
    def insert(self, pos, val):
        if pos >= self.size()-1:
            self.append(val)
        elif pos <= 0:
            cur = self.head
            self.head = Node(val)
            self.head.next = cur
            self._lens += 1
        else:
            cur = self.head
            pre = None
            mark = 0
            while cur :
                if mark == pos:
                    pre.next = Node(val)
                    pre.next.next = cur
                    self._lens += 1
                    return
                pre = cur
                cur = cur.next
                mark += 1
                
    def remove(self, val):
        if not self.head:
            raise ValueError
        elif self.head.val == val:
            self.head = self.head.next
            self._lens -= 1
            return
        pre = None
        cur = self.head
        while cur :
            if cur.val == val:
                pre.next = cur.next
                self._lens -= 1
                return 
            pre = cur
            cur = cur.next
            
            
# 循环链表           
class CLinkList:
    def __init__(self):
        self.head = None
        self._lens = 0
    def size(self):
        return self._lens
    def append(self, val):
        '''尾部添加'''
        if not self.head:
            self.head = Node(val)
            self.head.next = self.head
            self._lens += 1
            return 
        cur = self.head
        while cur.next != self.head:
            cur = cur.next
        node = Node(val)
        node.next = self.head
        cur.next = node
        self._lens += 1
    def add(self, val):
        '''头部添加'''
        if not self.head:
            self.head = Node(val)
            self.head.next = self.head
            self._lens += 1
            return
        cur = self.head
        while cur.next != self.head:
            cur = cur.next
        node = Node(val)
        node.next = self.head
        self.head = node
        cur.next = self.head
        self._lens += 1
        
    def insert(self, pos, val):
        '''指定位置添加'''
        if pos <= 0:
            self.add(val)
        elif pos >= self.size()-1:
            self.append(val)
        else:
            pre = None
            cur = self.head
            mark = 0
            while cur.next != self.head:
                if mark == pos:
                    node = Node(val)
                    pre.next = node
                    node.next = cur
                    self._lens += 1
                    return
                pre = cur
                cur = cur.next
    def remove(self, item):
        if not self.head:
            raise ValueError
        elif self.head.val == item:
            cur = self.head
            while cur.next != self.head:
                cur = cur.next
            cur.next = self.head.next
        else:
            pre = None
            cur = self.head
            while cur.next != self.head:
                if cur.val = item:
                    pre.next = cur.next
                    self._lens -= 1
                    return
                pre = cur
                cur = cur.next
            if cur.val == item:
                pre.next = self.head
                self._lens -= 1
                
# 双向链表                
class DNode:
    def __init__(self,val):
        self.val = val
        self.last = None
        self.next = None
        
class DLinkList:
    def __init__(self):
        self.head = None
        self._lens = 0
        
    def size(self):
        return self._lens
    def add(self, val):
        ''' 头部添加元素'''
        node = DNode(val)
        node.next = self.head
        self.head = node
        self._lens += 1
    def append(self, val):
        if not self.head:
            self.add(val)
            return 
        cur = self.head
        while cur.next:
            cur = cur.next
        node = DNode(val)
        cur.next = node
        node.last = cur
    def insert(self, val):
        ''' pos位置添加元素'''
        if pos >= self.size()-1:
            self.append(val)
        elif pos <= 0:
            self.add(val)
        else:
            pre = None
            cur = self.head
            mark = 0
            while cur:
                if cur.val == val:
                    node = DNode(val)
                    pre.next = node
                    node.last = pre
                    node.next = cur
                    self._lens += 1
                    return
                pre = cur
                cur = cur.next
                mark += 1
    def remove(self, item):
        ''' 删除指定元素'''
        if not self.head:
            raise ValueError
        elif self.head.val = item:
            self.head = self.head.next
        else:
            pre = None
            cur = self.head
            while cur:
                if cur.val = item:
                    tmp = cur.next
                    pre.next = tmp
                    tmp.last = pre
                    self._lens -= 1
                    return
                pre = cur
                cur = cur.next
                
